/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package day06;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.util.List;

class AppTest {

    @Test
    void canParsePoint() {

        Point pointA = Point.parsePoint("0,0");
        assertTrue(pointA.x == 0);
        assertTrue(pointA.y == 0);

        Point pointB = Point.parsePoint("1,1");
        assertTrue(pointB.x == 1);
        assertTrue(pointB.y == 1);
    }

    @Test
    void canParseRec() {

        Point pointA = Point.parsePoint("0,0");
        Point pointB = Point.parsePoint("1,1");

        Rect rect = new Rect(pointA, pointB);

        assertTrue(rect.pos.x == 0);
        assertTrue(rect.pos.y == 0);
        assertTrue(rect.width == 2);
        assertTrue(rect.width == 2);
        assertTrue(rect.height == 2);
    }

    @Test
    void canParseInstructions() {
        List<Instruction> parsedInstructions = Instruction
                .parseString("turn on 0,0 through 999,999\nturn off 0,0 through 99,99");

        assertTrue(parsedInstructions.get(0).type == InstructionType.On);
        assertTrue(parsedInstructions.get(0).area.width == 1000);
        assertTrue(parsedInstructions.get(0).area.height == 1000);

        assertTrue(parsedInstructions.get(1).type == InstructionType.Off);
        assertTrue(parsedInstructions.get(1).area.width == 100);
        assertTrue(parsedInstructions.get(1).area.height == 100);

    }

    @Test
    void canInitGrid() {
        BinaryLightGrid grid = new BinaryLightGrid(1000, 1000);
        assertTrue(grid.lightsOn() == 0);
    }

    @Test
    void canTurnOn() {
        List<Instruction> insts = Instruction.parseString("turn on 0,0 through 999,999");
        BinaryLightGrid grid = new BinaryLightGrid(1000, 1000);
        grid.executeInstructions(insts);
        assertTrue(grid.lightsOn() == 1_000_000);

        insts = Instruction.parseString("turn on 0,0 through 1,1");
        grid = new BinaryLightGrid(1000, 1000);
        grid.executeInstructions(insts);
        assertTrue(grid.lightsOn() == 4);

        insts = Instruction.parseString("turn on 0,0 through 0,0");
        grid = new BinaryLightGrid(1000, 1000);
        grid.executeInstructions(insts);
        assertTrue(grid.lightsOn() == 1);

        insts = Instruction.parseString("turn on 0,0 through 0,0");
        grid = new BinaryLightGrid(4, 4);
        grid.executeInstructions(insts);
        assertTrue(grid.lightsOn() == 1);
    }

    @Test
    void canToggle() {
        List<Instruction> insts = Instruction.parseString("toggle 0,0 through 999,0");
        BinaryLightGrid grid = new BinaryLightGrid(1000, 1000);
        grid.executeInstructions(insts);
        assertTrue(grid.lightsOn() == 1000);

        insts = Instruction.parseString("toggle 0,0 through 1,0");
        grid.executeInstructions(insts);
        assertTrue(grid.lightsOn() == 998);

        insts = Instruction.parseString("toggle 0,0 through 0,0");
        grid.executeInstructions(insts);
        assertTrue(grid.lightsOn() == 999);
    }

    @Test
    void canTurnOff() {
        List<Instruction> insts = Instruction.parseString("turn on 0,0 through 1,1");
        BinaryLightGrid grid = new BinaryLightGrid(4, 4);
        grid.executeInstructions(insts);
        assertTrue(grid.lightsOn() == 4);

        insts = Instruction.parseString("turn off 0,0 through 1,0");
        grid.executeInstructions(insts);
        assertTrue(grid.lightsOn() == 2);
    }

    @Test
    void canTurnOnVariableLightGrid() {
        List<Instruction> insts = Instruction.parseString("turn on 0,0 through 0,0");
        VariableLightGrid grid = new VariableLightGrid(1000, 1000);
        grid.executeInstructions(insts);
        assertTrue(grid.brightness() == 1);

        grid.executeInstructions(insts);
        assertTrue(grid.brightness() == 2);
    }

    @Test
    void canTurnOffVariableLightGrid() {
        List<Instruction> insts = Instruction.parseString("turn on 0,0 through 0,0");
        VariableLightGrid grid = new VariableLightGrid(1000, 1000);
        grid.executeInstructions(insts);
        assertTrue(grid.brightness() == 1);

        grid.executeInstructions(insts);
        assertTrue(grid.brightness() == 2);

        insts = Instruction.parseString("turn off 0,0 through 0,0");
        grid.executeInstructions(insts);
        assertTrue(grid.brightness() == 1);
    }

    @Test
    void canToggleVariableLightGrid() {
        List<Instruction> insts = Instruction.parseString("toggle 0,0 through 0,0");
        VariableLightGrid grid = new VariableLightGrid(1000, 1000);
        grid.executeInstructions(insts);
        assertTrue(grid.brightness() == 2);

        grid.executeInstructions(insts);
        assertTrue(grid.brightness() == 4);
    }
}
