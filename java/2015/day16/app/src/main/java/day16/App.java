/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package day16;

import java.util.HashMap;
import java.util.Map;

import filelinesloader.FileLinesLoader;

public class App {

    static Map<String, Integer> getFilter() {
        Map<String, Integer> filter = new HashMap<>();
        filter.put("children", 3);
        filter.put("cats", 7);
        filter.put("samoyeds", 2);
        filter.put("pomeranians", 3);
        filter.put("akitas", 0);
        filter.put("vizslas", 0);
        filter.put("goldfish", 5);
        filter.put("trees", 3);
        filter.put("cars", 2);
        filter.put("perfumes", 1);
        return filter;
    }

    static Sue[] getAunts() {
        String[] lines = FileLinesLoader.getLines("input.txt");
        Sue[] aunts = new Sue[lines.length];

        for (int i = 0; i < lines.length; i++) {
            aunts[i] = Sue.parseString(lines[i]);
        }

        return aunts;
    }

    public static void main(String[] args) {
        part1();
        part2();
    }

    static void part1() {

        Sue[] aunts = getAunts();

        Map<String, Integer> filter = getFilter();

        Sue nonConflictinSue = null;

        for (Sue s : aunts) {
            Sue foundAunt = s;

            for (Map.Entry<String, Integer> attribute : s.attributes.entrySet()) {
                if (filter.get(attribute.getKey()) != attribute.getValue()) {
                    foundAunt = null;
                    break;
                }
            }

            if (foundAunt != null) {
                nonConflictinSue = s;
                break;
            }
        }

        System.out.println(String.format("Non Conflicting Sue: %d", nonConflictinSue.id));
    }

    static void part2() {

        Sue[] aunts = getAunts();

        Map<String, Integer> filter = getFilter();

        Sue nonConflictinSue = null;

        for (Sue s : aunts) {
            Sue foundAunt = s;

            for (Map.Entry<String, Integer> attribute : s.attributes.entrySet()) {
                int filterValue = filter.get(attribute.getKey());
                int sueValue = attribute.getValue();
                switch (attribute.getKey()) {
                    case "cats":
                    case "trees":
                        if (sueValue <= filterValue) {
                            foundAunt = null;
                        }
                        break;
                    case "goldfish":
                    case "pomeranians":
                        if (sueValue >= filterValue) {
                            foundAunt = null;
                        }
                        break;
                    default:
                        if (sueValue != filterValue) {
                            foundAunt = null;
                            break;
                        }
                }
            }

            if (foundAunt != null) {
                nonConflictinSue = s;
                break;
            }
        }

        System.out.println(String.format("Non Conflicting Sue: %d", nonConflictinSue.id));
    }
}
